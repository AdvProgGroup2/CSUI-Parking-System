Register page

@author yohanafransiska

This is the register page that I have converted into a Java program from the PHP file that I did in the first
sprint in order to make it possible to integrate with Yanuar’s main program. Now, I have connected the register 
page with the local database that was made by Hakeem. It can now validate whether the users filled the information
(whether the field is empty or filled). If it is empty, the program will ask for the user to fill in their information and not let any of the field empty. If it is empty or if the information given is not correct, the program will keep
asking until the user gives the proper information.

I have also written a method that handles if the npm/username is already taken or is already exists in the database. Based on the database, the primary key is the NPM therefore there should not beany duplication for the NPM. However, I added another information that also must be unique which is the username. The NPM’s and username’s uniqueness is handled in the 'insertdata' method from the connectDb class. If the username is duplicated also, they must choose a new username
that does not already exist in the database. The program will not let that user register when there is still duplication
in the database/or if that username/npm is already taken.

I have made a connection between the Java file and the database, therefore whenever their is a student/staff that registers, their information is instantly inserted into the database. I also made a method that prevents any information duplication based on the data inserted in the database.

I spent 8 hours in trying to integrate my previous php code with Java and database and also already provided a working validation code to prevent duplication and empty fields. Luckily, even though I had small confusions as to how to integrate my php code with Java and database, I managed to finish my job in 1 sprint.

Short Guide:

1. In order to run this program well, you must have XAMPP installed on your laptop and run myphpadmin too. IN XAMPP, go to ‘manage servers’ and choose ‘start all’.
2. Then, you must add external jars in eclipse. In the package explorer, you must find JRE System Library. There you should right click and choose build path > configure build path. 
3. Then, choose ‘add external jars’. A window will open, find the jar file that was included in the Parking folder. Add that jar file then click ‘OK’
4. Go to localhost/phpmyadmin, click ‘Databases’ and in ‘Create Database’, create parking with a lowercase ‘p’. Then click ‘Create’.
5. After that, click import, then ‘choose file’ in file to import.
6. Choose the sql file that was included in the parking folder then click OK.
7. You can check whether the data registered is inserted in the database by clicking ‘parking’ then ‘member’ and go to browse.
8. You can now run this program as it is now connected with the database.